/*
 * Stm32f103c6_USART_Driver.c
 *
 *  Created on: Mar 27, 2023
 *      Author: Abdelaziz Maher
 */

#include"Stm32f103c6_USART_Driver.h"


/*
 * ======================================================================
 *                                          Generic variables
 *======================================================================
 */
UART_Config_t* Global_UART_Cfg = NULL ;


/*
 * ======================================================================
 *                                          Generic Functions
 *======================================================================
 */



/*
 *-----------------------------------------------------------
 * 				APIs Functions Definitions
 *-----------------------------------------------------------
 */


/**================================================================
 * @Fn			- MCAL_UART_Init
 * @brief       -Initialize UART (Asynchronous Only)
 * @param [in]  -USARTx :Where x can be (1...3 depending on device used)
 * @param [in]  -UART_Cfg :All the UART configuration
 * @retval      -None
 * Note         -support for now ASynch mode and clock 8 HZ
 **================================================================*/
void MCAL_UART_Init(USART_TypeDef* USARTx,UART_Config_t* UART_Cfg)
{
	Global_UART_Cfg = UART_Cfg;

	//Enable the Clock for given USART Peripheral
	if( USARTx == USART1 )
		RCC_USART1_CLK_ENABLE();
	else if ( USARTx == USART2 )
		RCC_USART2_CLK_ENABLE();
	else if ( USARTx == USART3 )
		RCC_USART3_CLK_ENABLE();

	//Enable USART Module
	//Bit 13 UE: USART enable
	USARTx->CR1 |= (1<<13) ;

	//Mode TX-RX
	USARTx->CR1 |= UART_Cfg->USART_Mode ;

	// PayLoad width
	//Bit 12 M:Word length
	USARTx->CR1 |= UART_Cfg->PayLoad_Length ;

	//Parity Bits
	USARTx->CR1 |= UART_Cfg->Parity ;

	//Stop Bits
	USARTx->CR2 |= UART_Cfg->StopBits;

	//Hardware Flow Control
	USARTx->CR3 |= UART_Cfg->HwFlowCTRL ;

}

/**================================================================
 * @Fn			- MCAL_UART_DeInit
 * @brief 		- Initialize EXTI from specific GPIO PIN and specify the Mask/Trigger Conditions and IRQ Callback
 * @param [in]	- USARTx :Where x can be (1...3 depending on device used)
 * @retval 		- None
 * Note			- STM32F103C6 MCU has GPIO A,B,C,D,E modules
 * 				  but LQFP48 package has only GPIO A,B, part of C/D exported as external Pins from the modules
 * 				- Also Mandatory to Enable RCC Clock for AFIO and the Corresponding GPIO
 **================================================================*/
void MCAL_UART_DeInit(USART_TypeDef * USARTx)
{

}

/**================================================================
 * @Fn			- MCAL_EXTI_GPIO_INIT
 * @brief 		- Initialize EXTI from specific GPIO PIN and specify the Mask/Trigger Conditions and IRQ Callback
 * @param [in]	- EXTI_Config: Set by @ref EXTI_define, EXTI_Trigger_define and EXTI_IRQ_define
 * @retval 		- None
 * Note			- STM32F103C6 MCU has GPIO A,B,C,D,E modules
 * 				  but LQFP48 package has only GPIO A,B, part of C/D exported as external Pins from the modules
 * 				- Also Mandatory to Enable RCC Clock for AFIO and the Corresponding GPIO
 **================================================================*/
void MCAL_UART_GPIO_Set_Pins(USART_TypeDef * USARTx)
{

}

/**================================================================
 * @Fn			- MCAL_EXTI_GPIO_INIT
 * @brief 		- Initialize EXTI from specific GPIO PIN and specify the Mask/Trigger Conditions and IRQ Callback
 * @param [in]	- EXTI_Config: Set by @ref EXTI_define, EXTI_Trigger_define and EXTI_IRQ_define
 * @retval 		- None
 * Note			- STM32F103C6 MCU has GPIO A,B,C,D,E modules
 * 				  but LQFP48 package has only GPIO A,B, part of C/D exported as external Pins from the modules
 * 				- Also Mandatory to Enable RCC Clock for AFIO and the Corresponding GPIO
 **================================================================*/
void MCAL_UART_SendData(USART_TypeDef * USARTX , uint16_t * pTXBuffer , enum Polling_mechism PollingEn)
{

}

/**================================================================
 * @Fn			- MCAL_EXTI_GPIO_INIT
 * @brief 		- Initialize EXTI from specific GPIO PIN and specify the Mask/Trigger Conditions and IRQ Callback
 * @param [in]	- EXTI_Config: Set by @ref EXTI_define, EXTI_Trigger_define and EXTI_IRQ_define
 * @retval 		- None
 * Note			- STM32F103C6 MCU has GPIO A,B,C,D,E modules
 * 				  but LQFP48 package has only GPIO A,B, part of C/D exported as external Pins from the modules
 * 				- Also Mandatory to Enable RCC Clock for AFIO and the Corresponding GPIO
 **================================================================*/
void MCAL_UART_ReceiveData(USART_TypeDef * USARTx,uint16_t * pRXBuffer , enum Polling_mechism PollingEn)
{

}

/**================================================================
 * @Fn			- MCAL_EXTI_GPIO_INIT
 * @brief 		- Initialize EXTI from specific GPIO PIN and specify the Mask/Trigger Conditions and IRQ Callback
 * @param [in]	- EXTI_Config: Set by @ref EXTI_define, EXTI_Trigger_define and EXTI_IRQ_define
 * @retval 		- None
 * Note			- STM32F103C6 MCU has GPIO A,B,C,D,E modules
 * 				  but LQFP48 package has only GPIO A,B, part of C/D exported as external Pins from the modules
 * 				- Also Mandatory to Enable RCC Clock for AFIO and the Corresponding GPIO
 **================================================================*/
void MCAL_UART_WAIT_TC (USART_TypeDef * USARTx)
{

}


/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include"Stm32f103x6.h"
#include"Stm32f103c6_GPIO_Driver.h"
#include"Stm32f103c6_USART_Driver.h"

#define Interrupt

unsigned char rxtx;

void Clock_Init()
{
	// enable PORTA ,PORTB clock
	GPIOA_CLOCK_ENABLE();
	GPIOB_CLOCK_ENABLE();
}

void UART1_App_Callback()
{
	MCAL_UART_ReceiveData(USART1, (uint16_t*)&rxtx, DISABLE);
	MCAL_UART_SendData(USART1, (uint16_t*)&rxtx, DISABLE);
}

int main(void)
{
	Clock_Init();

	UART_Config_t UART_Cfg;

	UART_Cfg.USART_BAUDRATE = UART_BAUDRATE_115200;
	UART_Cfg.HwFlowCTRL = UART_HwFlowCTL_NONE;
	UART_Cfg.USART_Mode = UART_MODE_RXTX;
	UART_Cfg.PayLoad_Length = UART_PayLoad_Length_8bit;
	UART_Cfg.Parity = UART_Parity_NONE;
	UART_Cfg.StopBits = UART_StopBits_1;
	UART_Cfg.IRQ_Enable = UART_IRQ_ENABLE_NONE;
    #ifdef Interrupt
	UART_Cfg.P_IRQ_CallBack = NULL;
    #endif
	UART_Cfg.P_IRQ_CallBack = UART1_App_Callback;
	MCAL_UART_Init(USART1,&UART_Cfg);
	MCAL_UART_GPIO_SetPins(USART1);

	while(1)
	{
        #ifndef Interrupt
		        MCAL_UART_ReceiveData(USART1, (uint16_t*)&rxtx, ENABLE);
		        MCAL_UART_SendData(USART1, (uint16_t*)&rxtx, ENABLE);
        #endif
	}
}



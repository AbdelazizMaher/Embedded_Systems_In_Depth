/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include"Stm32f103x6.h"
#include"Stm32f103c6_GPIO_Driver.h"
#include"Stm32f103c6_SPI_Driver.h"
#include"Stm32f103c6_I2C_Driver.h"
#include "I2C_Slave_EEPROM.h"

void Clock_Init();
int main(void)
{
	Clock_Init();

	// Test case (1)
	unsigned char ch1[] = {0x1,0x2,0x3,0x4,0x5,0x6,0x7};
	unsigned char ch2[7] = {0};

	EEPROM_Init();
	EEPROM_Write_nBytes(0xAF, ch1, 7);
	EEPROM_Read_nBytes(0xAF, ch2, 7);

	// Test case (2)
	ch1[0] = 0xA;
	ch1[1] = 0xB;
	ch1[2] = 0xC;
	ch1[3] = 0xD;

	EEPROM_Write_nBytes(0xFFF, ch1, 4);
	EEPROM_Read_nBytes(0xFFF, ch2, 4);

	while(1)
	{

	}
}

void Clock_Init()
{
	// Enable PORTA ,PORTB clock
	GPIOA_CLOCK_ENABLE();
	GPIOB_CLOCK_ENABLE();
}


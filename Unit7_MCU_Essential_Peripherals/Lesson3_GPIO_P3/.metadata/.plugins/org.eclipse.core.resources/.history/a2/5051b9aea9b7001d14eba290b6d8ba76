/*
 * Stm32f103c6_GPIO_Driver.c
 *
 *  Created on: Feb 28, 2023
 *      Author: Abdelaziz Maher
 */

#include"Stm32f103c6_GPIO_Driver.h"

/**================================================================
 * @Fn			- MCAL_GPIO_Init
 * @brief 		- initialize the GPIOx PINy according to the specified parameters in the Pin_Config
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @param [in] 	- Pin_Config: pointer to GPIO_Pin_Config_t structure which contains
 *                the configuration information for the specified GPIO Pin
 * @retval 		- None
 * Note			- STM32F103C6 MCU has GPIO A,B,C,D,E modules
 * 				  but LQFP48 package has only GPIO A,B, part of C/D exported as external Pins from the modules
 **================================================================*/
void MCAL_GPIO_Init(GPIO_TypeDef *GPIOx , GPIO_PinConfig_t *Pin_Config)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_DeInit
 * @brief 		- Reset all GPIOx registers
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @retval 		- None
 * Note			- None
 **================================================================*/
void MCAL_GPIO_DeInit(GPIO_TypeDef *GPIOx)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_ReadPin
 * @brief 		- Read specific Pin value
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @param [in]	- PinNumber: Set Pin number according to @ref GPIO_PINS_define
 * @retval 		- The input Pin value according to @ref GPIO_PIN_STATE_define
 * Note			- None
 **================================================================*/
uint8_t MCAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t PinNumber)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_ReadPort
 * @brief 		- Read the whole Port value
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @retval 		- The input Port value
 * Note			- None
 **================================================================*/
uint16_t MCAL_GPIO_ReadPort(GPIO_TypeDef *GPIOx)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_WritePin
 * @brief 		- Write on specific output Pin
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @param [in]	- PinNumber: set pin number according to @ref GPIO_PINS_define
 * @param [in]	- Value: Pin value
 * @retval 		- None
 * Note			- None
 **================================================================*/
void MCAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t PinNumber, uint8_t Value)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_WritePort
 * @brief 		- Write on specific output port
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @param [in]	- Value: Port value
 * @retval 		- None
 * Note			- None
 **================================================================*/
void MCAL_GPIO_WritePort(GPIO_TypeDef *GPIOx, uint16_t Value)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_TogglePin
 * @brief 		- Toggle a specific output pin
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @param [in]	- PinNumber: Set Pin number according to @ref GPIO_PINS_define
 * @retval 		- None
 * Note			- None
 **================================================================*/
void MCAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t PinNumber)
{

}

/**================================================================
 * @Fn			- MCAL_GPIO_LockPin
 * @brief 		- Lock a specific pin which allow the IO Configuration to be frozen
 * @param [in]	- GPIOx: where x can be (A...E depending on the device used) to select the GPIO peripheral
 * @param [in]	- PinNumber: set pin number according to @ref GPIO_PINS_define
 * @retval 		- Ok if pin is locked or Error if pin is not locked (according to @ref GPIO_RETURN_LOCK_define)
 * Note			- None
 **================================================================*/
uint8_t MCAL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint16_t PinNumber)
{

}
